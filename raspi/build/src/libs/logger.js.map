{"version":3,"sources":["libs/logger.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;QAmDG,SAAS,GAAT,SAAS;;;;;;;;;;QAwBT,MAAM,GAAN,MAAM;AAzEtB,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;;;;;;AAO3B,IAAI,EAAE,GAAG,IAAI,CAAC;;;;;;;;;;AAUd,SAAS,aAAa,CAAC,MAAM,EAAE;AAC3B,WAAO,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;CACzE,CAAC;;;;;;;AAOF,IAAI,SAAS,GAAG,OAAO,CAAC,UAAU,CAAC,SAAS,GAAG,UAAS,OAAO,EAAE;AAC7D,QAAI,CAAC,IAAI,GAAG,WAAW,CAAC;AACxB,QAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,MAAM,CAAC;CACxC,CAAC;;AAEF,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;;AAE5C,SAAS,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;AAC5D,QAAI,EAAE,EACN;AACI,UAAE,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AACvD,gBAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KACxB;CACJ,CAAC,AASK,SAAS,SAAS,CAAC,MAAM,EAAE;AAC9B,QAAI,IAAI,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;AACjC,QAAI,OAAO,GAAG;AACV,kBAAY,IAAI;AAChB,eAAS,OAAO;KACnB,CAAC;AACF,WAAO,CAAC,IAAI,GAAG,IAAI,CAAC;;AAEpB,QAAI,UAAU,GAAG,CAAE,IAAI,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EACtD,IAAI,SAAS,CAAC,OAAO,CAAC,CACzB,CAAC;;AAEF,WAAO,IAAI,OAAO,CAAC,MAAM,CAAC;AACtB,kBAAU,EAAE,UAAU;KACzB,CAAC,CAAC;CACN,AASM,SAAS,MAAM,CAAC,GAAG,EAAE;AACxB,MAAE,GAAG,GAAG,CAAC;CACZ","file":"libs/logger.js","sourcesContent":["'use strict';\n\nvar winston = require('winston');\nvar util = require('util');\n\n\n/**\n * Socket io object\n */\n\nvar io = null;\n\n\n/**\n * @brief Retreive filename given a module name\n * \n * @param  module module name\n * @return filename\n */\n\nfunction getModuleName(module) {\n    return module.filename.split('/').slice(-2).join('/').split('.js')[0];\n};\n\n\n/**\n * Transports through socket io to the control pannel for web debugging\n */\n\nvar WebLogger = winston.transports.WebLogger = function(options) {\n    this.name = 'webLogger';\n    this.level = options.level || 'info';\n};\n\nutil.inherits(WebLogger, winston.Transport);\n\nWebLogger.prototype.log = function (level, msg, meta, callback) {\n    if (io)\n    {\n        io.emit('log', { level: level, msg: msg, meta: meta });\n        callback(null, true);\n    }\n};\n\n\n/**\n * Get a logger including the module path\n * @param  module \n * @return {Object} Logger object\n */\n\nexport function getLogger(module) {\n    var path = getModuleName(module);\n    var options = {\n        \"colorize\": true,\n        \"level\": \"debug\"\n    };\n    options.path = path;\n\n    var transports = [ new winston.transports.Console(options),\n        new WebLogger(options)\n    ];\n\n    return new winston.Logger({\n        transports: transports\n    });\n}\n\n\n/**\n * @brief Set the io object\n * \n * @param  io_ socket.io instance \n */\n\nexport function initIO(io_) {\n    io = io_;\n}"],"sourceRoot":"/source/"}